name: Build and Deploy Code

# other e.g on: push or on: pull_request 

on: ["push", "pull_request"]
  
jobs:
  build:
    # create an environment on github 
    environment:
      name: testing
    # pass env vars as env secrets
    env: 
      DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
      DATABASE_PORT: ${{secrets.DATABASE_PORT}}
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
      DATABASE_NAME: ${{secrets.DATABASE_NAME}}
      DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      ALGORITHM: ${{secrets.ALGORITHM}}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
          POSTGRES_DB: ${{secrets.DATABASE_NAME}}_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    runs-on: ubuntu-latest
    steps:
      - name: pulling git repo
        uses: actions/checkout@v2
      - name: Install python version 3.9
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: update pip
        run: python -m pip install --upgrade pip
      - name: install all dependencies
        run: pip install -r requirements.txt
      - name: test with pytest
        run: |
          pip install pytest
          pytest

          # ------ place docker steps here -------- #

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    environment:
      name: production
    steps:
      - name: pulling git repo
        uses: actions/checkout@v2
      - name: deploying Heroku
        uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{secrets.HEROKU_APP_NAME}} # Must be unique in Heroku
          heroku_email: ${{secrets.HEROKU_EMAIL}}  

        #  ----- Steps to deploy on heroku via Github Actions ----- #
        #  on the runner I would have to:
        #   - pull the github repo 
        #       - since job could potentially take place on a different runner, 
        #       - it would need to have access to the repo
        #   - install heroku cli
        #   - heroku login
        #   - add git remote for heroku
        #   - git push heroku main

        # ----- Instead of doing all the above manually --------#
        # ** just find a built-in action on Github Actions marketplace 
        # ** that does it all under the hood